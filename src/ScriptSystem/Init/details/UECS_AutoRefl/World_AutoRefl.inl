// This file is generated by Ubpa::USRefl::AutoRefl

#pragma once

#include <USRefl/USRefl.h>
#include <UTemplate/Func.h>

template<>
struct Ubpa::USRefl::TypeInfo<Ubpa::UECS::World>
	: Ubpa::USRefl::TypeInfoBase<Ubpa::UECS::World>
{
	static constexpr AttrList attrs = {};

	static constexpr FieldList fields = {
		Field{Name::constructor, WrapConstructor<Ubpa::UECS::World()>()},
		Field{Name::constructor, WrapConstructor<Ubpa::UECS::World(const Ubpa::UECS::World&)>()},
		Field{"entityMngr", &Ubpa::UECS::World::entityMngr},
		Field{"systemMngr", &Ubpa::UECS::World::systemMngr},
		Field{"Update", &Ubpa::UECS::World::Update},
		Field{"DumpUpdateJobGraph", &Ubpa::UECS::World::DumpUpdateJobGraph},
		Field{"GenUpdateFrameGraph", &Ubpa::UECS::World::GenUpdateFrameGraph},
		Field{"AddCommand", &Ubpa::UECS::World::AddCommand},
		//Field{"Accept", &Ubpa::UECS::World::Accept},
		Field{"RunEntityJob", Ubpa::DecayLambda(
			[](
				Ubpa::UECS::World* world,
				std::function<void(
					Ubpa::UECS::World*,
					Ubpa::UECS::SingletonsView,
					Ubpa::UECS::Entity,
					size_t,
					Ubpa::UECS::CmptsView
				)> func,
				Ubpa::UECS::ArchetypeFilter archetypeFilter,
				Ubpa::UECS::CmptLocator cmptLocator,
				Ubpa::UECS::SingletonLocator singletonLocator,
				bool isParallel
			) {
				world->RunEntityJob(
					std::move(func),
					isParallel,
					std::move(archetypeFilter),
					std::move(cmptLocator),
					std::move(singletonLocator)
				);
			}
		)},
		Field{"RunChunkJob", Ubpa::DecayLambda(
			[](
				Ubpa::UECS::World* world,
				std::function<void(
					Ubpa::UECS::World*,
					Ubpa::UECS::ChunkView,
					Ubpa::UECS::SingletonsView
				)> func,
				Ubpa::UECS::ArchetypeFilter archetypeFilter,
				Ubpa::UECS::SingletonLocator singletonLocator,
				bool isParallel
			) {
				world->RunChunkJob(
					std::move(func),
					std::move(archetypeFilter),
					isParallel,
					std::move(singletonLocator)
				);
			}
		)},
	};
};

